;///-----------------------------------------------光标移动

CapsLock & k:: Send {Up}
CapsLock & j:: Send {Down}
CapsLock & h:: Send {Left}
CapsLock & l:: Send {Right}
return

capslock & w:: send ^{Right}
capslock & b:: send ^{Left}
return

;=============================================================================

;-----------------------------------------------撤销-重复

capslock & u:: send ^{z}
return

capslock & p:: send ^{v}
return

CapsLock & s:: send ^{x}
return

capslock & .:: send ^{y}          ;FX
return

;=============================================================================

;///-----------------------------------------------括选


>+h:: send {ShiftDown}{Left}
return
>+j:: send {ShiftDown}{Down}
return
>+k:: send {ShiftDown}{up}
return
>+l:: send {ShiftDown}{Right}
return

>+w:: send {CtrlDown}{ShiftDown}{Right}{CtrlUp}{ShiftDown}{ShiftUp}
return

>+b:: send {CtrlDown}{ShiftDown}{Left}{CtrlUp}{ShiftDown}{ShiftUp}
return

>+4:: send +{End}
>+0:: send +{Home}
return

;=============================================================================

;-----------------------------------------------段节

>!j::
    send {home}{Left}{ShiftDown}{home}{ShiftUp}{BackSpace}     ;Q_up
Return
 
>!k::
    send {end}{Right}{ShiftDown}{end}{ShiftUp}{BackSpace}  ;Q_down
Return

<^BackSpace:: 
    send {home}{Left}{Enter}
return

>!4:: send +{end}{delete}
return

>!0:: send +{home}{delete}
return

capslock & g::
if capslockg_presses > 0
{
    capslockg_presses += 1
    return
}
capslockg_presses = 1
SetTimer, keycapslockg, 200
return

Keycapslockg:

SetTimer, Keycapslockg, off

if capslockg_presses = 1
{
    Send, ^{Home}
}
else if capslockg_presses = 2
{
    Send, ^{End}
}
else if capslockg_presses < 2
MsgBox

capslockg_presses = 0
Return

;-----------------------------------------------删除、复制与剪切连击组合


capslock & y::                ;copy&cpy-here
if capslocky_presses > 0
{
    capslocky_presses += 1
    Return
}
capslocky_presses = 1
SetTimer, Keycapslocky, 200
Return

Keycapslocky:

SetTimer, Keycapslocky, off

if capslocky_presses = 1
{
    Gosub, Y1   
}
else if capslocky_presses = 2
{
    Gosub, Y2      
}
else if capslocky_presses > 2
{
    Gosub, Y3
}
;
capslocky_presses = 0
Return

Y1:
send, ^c
Return

Y2:
Send, {Home}{ShiftDown}{End}{ShiftUp}
send, ^c
send, {End}
Return

Y3:
send, ^{Left}{ShiftDown}
      ^{Right}{ShiftDown}{ShiftUp}
send, ^{c}
return

MsgBox
return


capslock & d::                  ;del&del-here
if capslockd_presses > 0
{
    capslockd_presses += 1
    Return
}
capslockd_presses = 1
SetTimer, Keycapslockd, 200
Return

Keycapslockd:

SetTimer, Keycapslockd, off

if capslockd_presses = 1
{
    send, {Delete}
}
else if capslockd_presses = 2
{
    send, {END}{ShiftDown}{HOME}{ShiftUp}{Backspace}
}
else if capslockd_presses > 2
MsgBox

capslockd_presses = 0
Return

;
capslock & x::                    ;bk0.1
if capslockx_presses > 0
{
    capslockx_presses += 1
    Return
}
capslockx_presses = 1
SetTimer, Keycapslockx, 200
Return

Keycapslockx:

SetTimer, Keycapslockx, off

if capslockx_presses = 1
{
    send, {Backspace}
}
else if capslockx_presses = 2
{
    send,{HOME}{ShiftDown}{End}{ShiftUp}
    send,^x
    send,{End}
}
else if capslockx_presses > 2
MsgBox

;reset code
capslockx_presses = 0
Return

;=============================================================================

;-----------------------------------------------end
CapsLock & 4::          ;end
if capslock4_presses > 0
{
    capslock4_presses += 1
    Return
}
capslock4_presses = 1
SetTimer, Keycapslock4, 200
Return

Keycapslock4:

SetTimer, Keycapslock4, off

if capslock4_presses = 1
{
    send, {END}
}
else if capslock4_presses = 2
{
    send, {ShiftDown}{END}
    send, ^x
}
else if capslock4_presses > 2
MsgBox

;
capslock4_presses = 0
Return

CapsLock & 0::                  ;home
if capslock0_presses > 0
{
    capslock0_presses += 1
    Return
}
capslock0_presses = 1
SetTimer, Keycapslock0, 200
Return

Keycapslock0:

SetTimer, Keycapslock0, off

if capslock0_presses = 1
{
    send, {home}
}
else if capslock0_presses = 2
{
    send, {ShiftDown}{home}
    send, ^x
}
else if capslock0_presses > 2
MsgBox

;
capslock0_presses = 0
Return

;=============================================================================

;-------------------------------------------------窗口置顶
>^\::  Winset, Alwaysontop, , A
;=============================================================================
